components:
  schemas:
    Pet:
      type: object
      required:
        - pet_type
      properties:
        pet_type:
          type: string

    Dog: # "Dog" is a value for the pet_type property (the discriminator value)
      allOf: # Combines the main `Pet` schema with `Dog`-specific properties
        - $ref: "#/components/schemas/Pet"
        - type: object
          # all other properties specific to a `Dog`
          properties:
            bark:
              type: boolean
            breed:
              type: string
              enum: [Dingo, Husky, Retriever, Shepherd]

    Cat: # "Cat" is a value for the pet_type property (the discriminator value)
      allOf: # Combines the main `Pet` schema with `Cat`-specific properties
        - $ref: "#/components/schemas/Pet"
        - type: object
          # all other properties specific to a `Cat`
          properties:
            hunts:
              type: boolean
            age:
              type: integer

    Root:
      type: object
      required:
        - rootprop
      properties:
        rootprop:
          type: string

    Child1:
      allOf:
        - $ref: "#/components/schemas/Root"
        - type: object
          properties:
            child1prop:
              type: string

    Child2:
      allOf:
        - $ref: "#/components/schemas/Child1"
        - $ref: "#/components/schemas/Child3"
        - type: object
          properties:
            child2prop:
              type: string

    Child3:
      type: object
      required:
        - child3prop
      properties:
        child3prop:
          type: string

