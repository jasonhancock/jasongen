// Code generated by template.test. DO NOT EDIT.
// template.test 1.2.3

package widgets

import (
	"fmt"
	"net/http"
)

// Foo
type Foo struct {
	Sort GetUsersSortFieldEnum `json:"sort"`
}

// GetUsersSortFieldEnum Sort fields for get users
type GetUsersSortFieldEnum string

const (
	GetUsersSortFieldEnumCreatedAt GetUsersSortFieldEnum = "created_at"
	GetUsersSortFieldEnumUsername  GetUsersSortFieldEnum = "username"
)

var validGetUsersSortFieldEnum = map[string]struct{}{
	"created_at": struct{}{},
	"username":   struct{}{},
}

func (s GetUsersSortFieldEnum) OK() error {
	_, ok := validGetUsersSortFieldEnum[string(s)]
	if !ok {
		return &enumInvalidValueError{value: string(s)}
	}
	return nil
}

type enumInvalidValueError struct {
	value string
}

func (e *enumInvalidValueError) Error() string {
	return fmt.Sprintf("%q is not a valid enumerated value", e.value)
}

func (e *enumInvalidValueError) StatusCode() int {
	return http.StatusUnprocessableEntity
}
