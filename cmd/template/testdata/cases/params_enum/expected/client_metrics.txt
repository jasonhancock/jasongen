// Code generated by template.test. DO NOT EDIT.
// template.test 1.2.3

package widgets

import (
	"context"
	"time"

	"github.com/prometheus/client_golang/prometheus"
)

// MetricsClient wraps a Client and will record metrics around request duration.
type MetricsClient struct {
	client Iface
	metric *prometheus.HistogramVec
}

// NewMetricsClient initializes a MetricsClient.
func NewMetricsClient(client Iface, metric *prometheus.HistogramVec) *MetricsClient {
	return &MetricsClient{
		client: client,
		metric: metric,
	}
}

// WidgetsList Gets a list of all widgets
func (c *MetricsClient) WidgetsList(ctx context.Context, param2 string, qp WidgetsListParams) error {
	start := time.Now()
	err := c.client.WidgetsList(ctx, param2, qp)
	c.metric.WithLabelValues("widgets_list").Observe(time.Since(start).Seconds())
	return err
}
