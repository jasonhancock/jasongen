// Code generated by template.test. DO NOT EDIT.
// template.test 1.2.3

package widgets

import "context"

var _ SVC = (*LoggingService)(nil) // Verify that *LoggingService implements SVC.

type ErrorLogger interface {
	LogError(msg string, err error, keyvals ...any)
}

type LoggingService struct {
	logger ErrorLogger
	svc    SVC
}

func NewLoggingService(svc SVC, l ErrorLogger) *LoggingService {
	return &LoggingService{
		logger: l,
		svc:    svc,
	}
}

// Metrics returns application metrics in a format Prometheus can scrape
func (s *LoggingService) Metrics(ctx context.Context) ([]byte, error) {
	resp, err := s.svc.Metrics(ctx)
	if err != nil {
		s.logger.LogError("metrics error", err)
	}

	return resp, err
}

// WidgetCreate
func (s *LoggingService) WidgetCreate(ctx context.Context, req WidgetCreateRequest) (Widget, error) {
	resp, err := s.svc.WidgetCreate(ctx, req)
	if err != nil {
		s.logger.LogError("widgetCreate error", err)
	}

	return resp, err
}

// WidgetDelete delete a specific widget by ID.
func (s *LoggingService) WidgetDelete(ctx context.Context, id string) error {
	err := s.svc.WidgetDelete(ctx, id)
	if err != nil {
		s.logger.LogError("widgetDelete error", err)
	}

	return err
}

// WidgetDownload downloads a file.
func (s *LoggingService) WidgetDownload(ctx context.Context, id string) (*FileDownloadResponse, error) {
	resp, err := s.svc.WidgetDownload(ctx, id)
	if err != nil {
		s.logger.LogError("widgetDownload error", err)
	}

	return resp, err
}

// WidgetGet get a specific widget by ID.
func (s *LoggingService) WidgetGet(ctx context.Context, id string, num int64) (Widget, error) {
	resp, err := s.svc.WidgetGet(ctx, id, num)
	if err != nil {
		s.logger.LogError("widgetGet error", err)
	}

	return resp, err
}

// WidgetsList gets a list of all widgets
func (s *LoggingService) WidgetsList(ctx context.Context, qp WidgetsListParams) (WidgetsListResponse, error) {
	resp, err := s.svc.WidgetsList(ctx, qp)
	if err != nil {
		s.logger.LogError("widgetsList error", err)
	}

	return resp, err
}
