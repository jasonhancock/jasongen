package widgets

// This file was originally generated by template.test, but it is intended for you to edit it.
// template.test 1.2.3

import (
	"context"
	"io"
)

var _ SVC = (*Service)(nil) // Verify that *Service implements SVC.

// SVCCustomizations allows you to embed additional services into your SVC
// interface. You will have to manually implement them for the logging/metrics
// services.
type SVCCustomizations interface{}

type Service struct {
	// TODO: add whatever you need to here.
}

func NewService() *Service {
	return &Service{}
}

// WidgetCreate
func (s *Service) WidgetCreate(ctx context.Context, req models.WidgetCreateRequest) (Widget, error) {
	// TODO: Put your business logic in here.
	panic("not implemented")
}

// WidgetDelete delete a specific widget by ID.
func (s *Service) WidgetDelete(ctx context.Context, id string) error {
	// TODO: Put your business logic in here.
	panic("not implemented")
}

// WidgetDownload downloads a file.
// Return values are a ReadCloser with the content, file name, and content type.
func (s *Service) WidgetDownload(ctx context.Context, id string) (io.ReadCloser, string, string, error) {
	// TODO: Put your business logic in here.
	panic("not implemented")
}

// WidgetGet get a specific widget by ID.
func (s *Service) WidgetGet(ctx context.Context, id string, num int64) (Widget, error) {
	// TODO: Put your business logic in here.
	panic("not implemented")
}

// WidgetsList gets a list of all widgets
func (s *Service) WidgetsList(ctx context.Context, qp WidgetsListParams) (WidgetsListResponse, error) {
	// TODO: Put your business logic in here.
	panic("not implemented")
}
