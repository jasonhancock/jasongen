// Code generated by {{.GeneratorInfo.Name }}. DO NOT EDIT.
// {{ .GeneratorInfo.Name }} {{ .GeneratorInfo.Version }}

package {{ .PackageName }}

import (
    "context"

    "github.com/prometheus/client_golang/prometheus"
)

var _ SVC = (*MetricsService)(nil) // Verify that *MetricsService implements SVC.

type MetricsService struct {
    svc    SVC
    errCounter *prometheus.CounterVec
}

func NewMetricsService(svc SVC, errCounter *prometheus.CounterVec) *MetricsService {
	return &MetricsService{
		svc: svc,
        errCounter: errCounter,
	}
}

{{ range .Handlers }}
// {{ .ExportedName }} {{ .Comment }}
func (s *MetricsService) {{ .ExportedName }}({{ .TypeList }}) {{ if .ResponseType }}({{ .ResponseType }}, {{end}}error{{ if .ResponseType }}){{end}} {
	{{ if .ResponseType}}resp, {{ end }}err := s.svc.{{ .ExportedName }}({{ .ValueList false }})
	if err != nil {
        s.errCounter.WithLabelValues("{{ snake .Name }}").Inc()
	}

	return {{ if .ResponseType }}resp, {{ end }} err
}
{{ end }}
