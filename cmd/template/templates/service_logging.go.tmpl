// Code generated by {{.GeneratorInfo.Name }}. DO NOT EDIT.
// {{ .GeneratorInfo.Name }} {{ .GeneratorInfo.Version }}

package {{ .PackageName }}

import "context"
{{ if .PkgModels }}
import models "{{ .PkgModels }}"
{{ end }}


var _ SVC = (*LoggingService)(nil) // Verify that *LoggingService implements SVC.

type ErrorLogger interface {
	LogError(msg string, err error, keyvals ...any)
}

type LoggingService struct {
    logger ErrorLogger
    svc    SVC
}

func NewLoggingService(svc SVC, l ErrorLogger) *LoggingService {
	return &LoggingService{
		logger: l,
		svc: svc,
	}
}

{{ range .Handlers }}
// {{ .ExportedName }} {{ .Comment }}
func (s *LoggingService) {{ .ExportedName }}({{ .TypeList }}) {{ if .IsFileDownload }}(io.ReadCloser, string, string, {{ else }}{{ if .ResponseType }}({{ models .ResponseType }}, {{end}}{{end}}error{{ if .ResponseType }}){{end}} {
{{ if .IsFileDownload -}}
	fh, fileName, contentType, err := s.svc.{{ .ExportedName }}({{ .ValueList false }})
{{ else -}}
	{{ if .ResponseType}}resp, {{ end }}err := s.svc.{{ .ExportedName }}({{ .ValueList false }})
{{ end -}}
	if err != nil {
		s.logger.LogError("{{ .Name }} error", err)
	}

{{ if .IsFileDownload -}}
	return fh, fileName, contentType, err
{{ else -}}
	return {{ if .ResponseType }}resp, {{ end }} err
{{ end -}}
}
{{ end }}
